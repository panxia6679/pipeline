box: golang

dev:
  steps:
    - setup-go-workspace:
        package-dir: github.com/panxia6679/pipeline

    - script:
        name: env
        code: env

    - script:
        name: go get
        code: |
          cd $WERCKER_SOURCE_DIR
          go version
          go get -u github.com/Masterminds/glide
          export PATH=$WERCKER_SOURCE_DIR/bin:$PATH
          glide install

    - internal/watch:
        code: go run main.go
        reload: true

build:
  steps:
    - setup-go-workspace:
        package-dir: github.com/panxia6679/hello

    - script:
        name: env
        code: env

    - script:
        name: go get
        code: |
          cd $WERCKER_SOURCE_DIR
          go version
          go get -u github.com/Masterminds/glide
          export PATH=$WERCKER_SOURCE_DIR/bin:$PATH
          glide install

    # Build the project
    - script:
        name: go build
        code: |
          go build

    # Test the project
    - script:
        name: go test
        code: |
          go test -v $(glide novendor)

    - script:
        name: copy files to wercker output
        code: |
          cp -R ./ ${WERCKER_OUTPUT_DIR}


deploy:
 steps:
   - internal/docker-push:
       username: $DOCKER_USERNAME
       password: $DOCKER_PASSWORD
       cmd: /pipeline/source/pipeline
       port: "8080"
       tag: latest
       repository: panxia6679/pipeline
       registry: https://registry.hub.docker.com/v2

#   - cng/cf-deploy:
#       api: $API
#       user: $USER
#       password: $PASSWORD
#       org: $ORG
#       space: $SPACE
#       appname: wercker-step-hello
#       docker_image: panxia6679/pipeline
